# 이진트리의 노드수는 깊이를 d라고 하면, 시그마(2^n) (n=0~d-1)
# 1. 주어진 숫자를 이진수로 바꾸고, 앞에 0을 붙여서 이진트리의 길이와 같게 만들 수 있는지 확인
# (뒤에 0이 붙으면 자리수가 달라져버리므로, 앞에 0도 하나만 붙일 수 있음)
# 앞에 0을 무한정 붙일 수는 없음 (이진트리여야 하므로)
# 2. 각 부모노드들이 1이 맞는지 확인
# 개수를 맞췄을 때, 중앙값이 최상위 노드임. 양쪽을 계속 확인하면 됨.
# (부모노드가 0이면, 만들 수 없음)
# 64 32 16 8 4 2 1
# 58 -> 111010 -> 0111010 
#    1
#  1   1
# 0 1 0 0
# 7: 111, 42: 101010
# 42 -> 101010 -> 0101010
#    1
#  1   1
# 0 0 0 0
# 5: 101 -> 부모노드가 0이 될 수 없으므로 만들 수 없음. 앞에 0 붙여도 만들 수 X

def solution(numbers):
    ans = [] 
    
    # 주어진 숫자를 이진수로 바꿈
    
    
    return ans